{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack:///./src/views/Register.vue","webpack:///./src/composables/useSignup.js","webpack:///./src/composables/useLogin.js","webpack:///./src/views/Register.vue?f5a6","webpack:///./node_modules/regenerator-runtime/runtime.js"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","class","slideUp","dClass","signupBtn","id","handleSubmit","type","placeholder","displayName","email","password","loginBtn","handleLogin","ref","signup","projectAuth","createUserWithEmailAndPassword","res","Error","user","updateProfile","console","log","message","useSignup","loginError","login","signInWithEmailAndPassword","useLogin","setup","props","context","router","push","path","emit","render","runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","defineProperty","enumerable","configurable","writable","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","Context","_invoke","makeInvokeMethod","tryCatch","call","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","AsyncIterator","PromiseImpl","invoke","record","result","__await","unwrapped","previousPromise","enqueue","callInvokeWithMethodAndArg","state","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootEntry","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","globalThis","Function"],"mappings":"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","file":"js/chunk-09a4ddfa.4555b0a5.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","<template>\r\n  <form>\r\n    <div class=\"form-structor\">\r\n      <div class=\"signup\" :class=\"slideUp && dClass\">\r\n        <h2 class=\"form-title\" @click=\"signupBtn\" id=\"signup\"><span>or</span>Sign up</h2>\r\n        <form @submit.prevent=\"handleSubmit\">\r\n          <div class=\"form-holder\">\r\n            <input type=\"text\" class=\"input\" placeholder=\"Display name\" v-model=\"displayName\" />\r\n            <input type=\"email\" class=\"input\" placeholder=\"Email Address\" v-model=\"email\" />\r\n            <input type=\"password\" class=\"input\" placeholder=\"Password\" v-model=\"password\" />\r\n          </div>\r\n          <button class=\"submit-btn\">Sign up</button>\r\n        </form>\r\n      </div>\r\n      <div class=\"login\" :class=\"slideUp ? 'slide-down' : 'slide-up'\">\r\n        <div class=\"center\">\r\n          <h2 class=\"form-title\" @click=\"loginBtn\" id=\"login\"><span>or</span>Log in</h2>\r\n          <form @submit.prevent=\"handleLogin\">\r\n            <div class=\"form-holder\">\r\n              <input type=\"email\" class=\"input\" placeholder=\"Email\" v-model=\"email\" />\r\n              <input type=\"password\" class=\"input\" placeholder=\"Password\" v-model=\"password\" />\r\n            </div>\r\n            <button class=\"submit-btn\">Log in</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue'\r\nimport useSignup from '../composables/useSignup'\r\nimport useLogin from '../composables/useLogin'\r\nimport { useRouter } from 'vue-router'\r\n\r\nexport default {\r\n  setup(props, context) {\r\n    const { error, signup } = useSignup()\r\n    const { loginError, login } = useLogin()\r\n    const router = useRouter()\r\n\r\n    const displayName = ref('')\r\n    const email = ref('')\r\n    const password = ref('')\r\n    const slideUp = ref(false)\r\n    const dClass = ref('slide-up')\r\n\r\n    const handleSubmit = async () => {\r\n      await signup(email.value, password.value, displayName.value)\r\n      router.push({\r\n        path: '/chat'\r\n      })\r\n    }\r\n\r\n    const handleLogin = async () => {\r\n      await login(email.value, password.value)\r\n      context.emit('signup')\r\n    }\r\n\r\n    const loginBtn = () => {\r\n      slideUp.value = true\r\n    }\r\n\r\n    const signupBtn = () => {\r\n      slideUp.value = false\r\n    }\r\n\r\n    return {\r\n      displayName,\r\n      email,\r\n      password,\r\n      handleSubmit,\r\n      handleLogin,\r\n      error,\r\n      loginError,\r\n      slideUp,\r\n      loginBtn,\r\n      dClass,\r\n      signupBtn\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>","import { ref } from 'vue'\r\nimport { projectAuth } from '../firebase/config'\r\n\r\nconst error = ref(null)\r\n\r\nconst signup = async (email, password, displayName) => {\r\n  error.value = null\r\n\r\n  try {\r\n    const res = await projectAuth.createUserWithEmailAndPassword(email, password)\r\n    if(!res) {\r\n      throw new Error('Could not complete the signup')\r\n    }\r\n    await res.user.updateProfile({\r\n      displayName\r\n    })\r\n    error.value = null\r\n\r\n    return res\r\n  } catch(err) {\r\n    console.log(err.message)\r\n    error.value = err.message\r\n  }\r\n}\r\n\r\nconst useSignup = () => {\r\n  return { error, signup }\r\n}\r\n\r\nexport default useSignup","import { ref } from 'vue'\r\nimport { projectAuth } from '../firebase/config'\r\n\r\nconst loginError = ref(null)\r\n\r\nconst login = async (email, password) => {\r\n  loginError.value = null\r\n\r\n  try {\r\n    const res = await projectAuth.signInWithEmailAndPassword(email, password)\r\n    loginError.value = null\r\n    return res\r\n  } catch(err) {\r\n    console.log(err.value)\r\n    loginError.value = 'Incorrect login credentials'\r\n  }\r\n}\r\n\r\nconst useLogin = () => {\r\n  return { loginError, login }\r\n}\r\n\r\nexport default useLogin","import { render } from \"./Register.vue?vue&type=template&id=7e5791f0\"\nimport script from \"./Register.vue?vue&type=script&lang=js\"\nexport * from \"./Register.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n"],"sourceRoot":""}